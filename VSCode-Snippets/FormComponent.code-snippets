{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Form component": {
		"scope": "javascript,typescript",
		"prefix": "form",
		"body": [
			"function $1Form({onSubmit, buttonText}) {",
			"	function handleSubmit(event) {",
			"		event.preventDefault()",
			"		const { ${2:textInputId}, ${3:passwordInputId} } = event.target.elements;",
			"",
			"		onSubmit({",
			"			${2:textInputId}: ${2:textInputId}.value,",
			"			${3:passwordInputId}: ${3:passwordInputId}.value",
			"		})",
			"	}",
			"",
			"	return (",
			"		<form onSubmit={handleSubmit}>",
			"			<div>",
			"				<label htmlFor='${2:textInputId}'>Username</label>",
			"				<input id='${2:textInputId}' autoComplete='username' type='text' />",
			"			</div>",
			"			<div>",
			"				<label htmlFor='${3:passwordInputId}'>Password</label>",
			"				<input id='${3:passwordInputId}' autoComplete='current-password' type='password' />",
			"			</div>",
			"			<button type='submit'>{buttonText}</button>",
			"		</form>",
			"	)",
			"}"
		],
		"description": "A simple login form example from Epict React, augmented by Google Chrome's autoCompletion warnings."
	}
}